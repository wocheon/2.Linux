#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats
    tune.ssl.default-dh-param 2048
    ssl-default-bind-options no-sslv3
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS


#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#frontend https
#  bind *:443 ssl crt /etc/letsencrypt/live/testdomainnames2.com/site.pem force-tlsv12
#  mode tcp 
 
# acl web-url-1 hdr_end(host) -i testdomainnames2.com 
# use_backend web-1 if web-url-1
# use_backend tcp-web if { req_ssl_sni -i testdomainnames2.com }
# http-request set-header X-Forwarded-Proto https if !{ ssl_fc } 
# redirect scheme https code 301 if !{ ssl_fc } 
# default_backend tcp-web

#backend tcp-web
#   mode tcp
#   balance roundrobin
#   option forwardfor
#   option tcplog
#   server websrv-1 192.168.2.3:80 check


frontend http-redirect
  bind *:80
  bind *:443 ssl crt /etc/letsencrypt/live/testdomainnames2.com/site.pem force-tlsv12
  mode http
  option httplog
  acl web-url-2 hdr_end(host) -i testdomainname.info 
  acl web-url-1 hdr_end(host) -i testdomainnames2.com 


  use_backend web-1 if web-url-1
  use_backend web-2 if web-url-2

backend web-2
   balance roundrobin
   option forwardfor
   option httplog
   server websrv-2 192.168.2.4:80 check

frontend http-in
   bind *:8080
   mode http
   option httplog
  default_backend web-1

backend web-1
   balance roundrobin
   option forwardfor
   option httplog
   option tcplog
#  redirect scheme https code 301 if !{ ssl_fc } 
   server websrv-1 192.168.2.3:80 check
